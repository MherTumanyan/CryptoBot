type Query {
    getOrderId: OrderId
    getIncomingTransactions: [IncomingTransaction] @isAuthenticated
    getOutgoingTransactions: [OutgoingTransaction] @isAuthenticated
    getMinAndMaxTransactionValue(coinType: CoinType, currency: CurrencyType): LimitedValues @isAuthenticated
    getUsdAmount(btcAmount: Float, toFixed: Int): CurrencyValue @isAuthenticated
    getWithdrawTransactionFee: [SortedFee] @isAuthenticated
    getEasyTransferFee: [SortedFee] @isAuthenticated
    validateTransferAmount(amountInCoin: Float, totalAmountInCoin: Float, coin: CoinType): ValidAmount @isAuthenticated
    validatePhoneNumber(phoneNumber: String): ValidPhoneNumber @isAuthenticated
    validateDigits(phoneNumber: String): ValidPhoneNumber @isAuthenticated
    validateName(name: String): OperationStatus @isService
    validateCurrencyValue(value: String, currency: CurrencyType, withoutMinAmount: Boolean, withoutMaxAmount: Boolean): ValidBtcValue @isAuthenticated
    getHistory(skip: Int, limit: Int): [HistoryResponse] @isAuthenticated
    getNewReceivingAddress(coinType: String!): String @isAuthenticated
    isAddressInternal(address: String, coinType: CoinType): Boolean @isAuthenticated
    validateCoinAddress(coinAddress: String, coinType: CoinType, externalCall: Boolean): OperationStatus @isAuthenticated
}
