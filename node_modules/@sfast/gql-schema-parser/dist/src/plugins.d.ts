import { SchemaTypeDefinitionNode, SchemaFieldDefinitionsNode } from './types';
import { GraphEntityParser } from './parser';
export declare const extractMongoPluginFields: (parser: GraphEntityParser, node: SchemaTypeDefinitionNode, directiveArgs: any) => {
    kind: string;
    name: {
        kind: string;
        value: string;
    };
    arguments: any[];
    type: {
        kind: string;
        name: {
            kind: string;
            value: string;
        };
    };
    directives: any[];
}[];
export declare const extractExtendPluginFields: (parser: GraphEntityParser, node: SchemaTypeDefinitionNode, extendsDirectiveArgs: any) => SchemaFieldDefinitionsNode[];
export declare const gqlDefaultPlugins: ({
    name: string;
    extractFields: (parser: GraphEntityParser, node: SchemaTypeDefinitionNode, extendsDirectiveArgs: any) => SchemaFieldDefinitionsNode[];
} | {
    name: string;
    extractFields: (parser: GraphEntityParser, node: SchemaTypeDefinitionNode, directiveArgs: any) => {
        kind: string;
        name: {
            kind: string;
            value: string;
        };
        arguments: any[];
        type: {
            kind: string;
            name: {
                kind: string;
                value: string;
            };
        };
        directives: any[];
    }[];
})[];
export declare function generateInputObjectDefinition(objectTypeDef: SchemaFieldDefinitionsNode, parser: GraphEntityParser): SchemaFieldDefinitionsNode;
