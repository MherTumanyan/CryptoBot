#import * from "@sfast/gql-schema-parser/src/directives.graphql"
#import * from "../src/directives.graphql"  
    scalar Date

    enum Gender {
        MALE
        FEMALE
        OTHER
    }

    union Name = Person | FullName #can't be primitive type

    type Person @namespace(value: "Person") {
        id: ID! @ObjectId @unique
        # birth: Date @setonce 
    }

    type Job @version(value: 1){
        professions: [String]
        title: String!
        salary: Int
    }

    type Address  {
        street: String
        house: String
    }

    input FullName @collection(value: "names"){
      firstName: String @required 
      lastName: String! @default(value: "lastName") 
    }

    input Contact @extends(value: ["FullName"]) @collection(value: "contacts"){
        id: String @unique @ObjectId
        address: Address  
        phoneNumber: Int @setonce
        # user: User # this will cause Cyclic typing error
    }

    type User @collection(value: "users") @extends(value: "Person"){ 
        name: FullName @required
        userName: String! @unique @lowercase
        nickName: Name
        email: String! @minlength(value: 8) @unique
        gender: Gender!
        age: Int @required @min(value: 18) @max(value: 70)
        password: String @hash
        contacts: [Contact]!
        merried: Boolean
    }