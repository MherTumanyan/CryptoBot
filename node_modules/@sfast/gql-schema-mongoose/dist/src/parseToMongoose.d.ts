import { DocumentNode } from 'graphql';
import { Schema } from 'mongoose';
import { GraphEntityParser, IEntityDefinition } from '@sfast/gql-schema-parser';
import { MongooseEntityDefinition } from './types';
declare class ParseToMongoose extends GraphEntityParser {
    mongooseEntities: Record<string, MongooseEntityDefinition>;
    mongooseSchemas: Record<string, Schema>;
    constructor(graphNode: DocumentNode, options?: Record<string, any>);
    getEntitySchema(typeName: string): Schema;
    getEntityByName(name: string): MongooseEntityDefinition;
    getEntityCollectionValue(entityName: string): string | undefined;
    createMongooseEntity(entity: IEntityDefinition): MongooseEntityDefinition;
    /**
     * Parses schema of Entity to mongoose schema
     * @param schema
     */
    private getMongooseSchemaDefinition;
    /**
     * parses entity schema to mongoose Schema types
     * @param entities
     */
    private getMongooseEntities;
    /**
     * creates mongoose Schemas from mongooseEntities which have collection directive
     * @param mongooseEntities
     */
    private createMongooseSchemas;
    /**
     * Creates schema from mongooseEntity
     * @param mongooseEntity
     */
    private createMongooseSchema;
}
export { ParseToMongoose };
