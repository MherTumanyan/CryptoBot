"use strict";
// tslint:disable-next-line:no-reference
/// <reference path="../../../../node_modules/reflect-metadata/index.d.ts" />
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var graphql_1 = require("graphql");
var object_type_1 = require("./object-type");
function ResolveTypeMethod() {
    return function (target, propertyKey) {
        var existingConfig = Reflect.getMetadata(object_type_1.GRAPHQL_OBJECT_TYPE_CONFIG, target) || {};
        existingConfig.resolveType = function (root, args) {
            var _a;
            return (_a = target[propertyKey]).call.apply(_a, [root].concat(Object['values'](args)));
        };
        Reflect.defineMetadata(object_type_1.GRAPHQL_OBJECT_TYPE_CONFIG, existingConfig, target.constructor);
    };
}
exports.ResolveTypeMethod = ResolveTypeMethod;
function InterfaceType(config) {
    return function (target) {
        var existingConfig = Reflect.getMetadata(object_type_1.GRAPHQL_OBJECT_TYPE_CONFIG, target) || {};
        Reflect.defineMetadata(object_type_1.GRAPHQL_OBJECT_TYPE, new graphql_1.GraphQLInterfaceType(tslib_1.__assign({ name: target.name }, existingConfig, (config || {}))), target);
    };
}
exports.InterfaceType = InterfaceType;
//# sourceMappingURL=interface-type.js.map