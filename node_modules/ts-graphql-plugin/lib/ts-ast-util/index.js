"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const tsserverlibrary_1 = __importDefault(require("typescript/lib/tsserverlibrary"));
__export(require("./template-expression-resolver"));
var script_source_helper_1 = require("./script-source-helper");
exports.createScriptSourceHelper = script_source_helper_1.createScriptSourceHelper;
function findNode(sourceFile, position) {
    function find(node) {
        if (position >= node.getStart() && position < node.getEnd()) {
            return tsserverlibrary_1.default.forEachChild(node, find) || node;
        }
    }
    return find(sourceFile);
}
exports.findNode = findNode;
function findAllNodes(sourceFile, cond) {
    const result = [];
    function find(node) {
        if (cond(node)) {
            result.push(node);
            return;
        }
        else {
            tsserverlibrary_1.default.forEachChild(node, find);
        }
    }
    find(sourceFile);
    return result;
}
exports.findAllNodes = findAllNodes;
function isTagged(node, condition) {
    if (!node || !node.parent)
        return false;
    if (!tsserverlibrary_1.default.isTaggedTemplateExpression(node.parent))
        return false;
    const tagNode = node.parent;
    return tagNode.tag.getText() === condition;
}
exports.isTagged = isTagged;
//# sourceMappingURL=index.js.map