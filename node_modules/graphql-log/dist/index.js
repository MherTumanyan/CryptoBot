'use strict';

var deepForEach = require('deep-for-each');
var isFunction = require('is-function');

var createGraphQLLogger = function createGraphQLLogger() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return function (resolvers) {
    var logger = options.logger || console.log.bind(console);
    // Deeply iterate over all resolvers
    deepForEach(resolvers, function (value, prop, subject, path) {
      // If we have a function
      if (isFunction(value)) {
        // Construct the string to be logged
        var string = options.prefix ? options.prefix + path : path;
        // Replace the original value with a wrapper function
        subject[prop] = function wrapped() {
          logger(string);
          return value.apply(undefined, arguments);
        };
      }
    });
  };
};

module.exports = createGraphQLLogger;