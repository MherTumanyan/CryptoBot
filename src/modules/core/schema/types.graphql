type AccountOwnerName {
    accountId: String
    name: String
}

type BTCWallet {
    address: String
}

type WithdrawFee {
    id: String
    amountUSD: Float
    fee: Float
    feeUSD: Float
}

type EasyTransferFee {
    id: String
    amountUSD: Float
    fee: Float
    feeUSD: Float
}

type Fees {
    withdrawFees: [WithdrawFee]
    fixWithdrawFee: WithdrawFee
    easyTransferFees: [EasyTransferFee]
}

type Recurrences {
    everyOneMinute: String
}

type BestPrice {
    value: String
    unit: CurrencyType @default(value: "USD")
}

input BestPriceInput {
    value: String
    unit: CurrencyType
}

type OfferAmount {
    value: Float
    unit: CurrencyType
}

type OperationStatus {
    error: String
    code: Int
    success: Boolean
}

type NeedVerification @extends(value: "OperationStatus") {
    needVerification: Boolean
}
